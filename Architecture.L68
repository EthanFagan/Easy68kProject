00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/04/2018 14:03:17

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Castle botherers 7
00000000                             3  * Written by : Ethan Fagan
00000000                             4  * Date       : 16/3/18
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be Evil Crimson Wizard or the knights of Dio
00001000                            14  *-------------------------------------------------------
00001000                            15  
00001000                            16  *-------------------------------------------------------
00001000                            17  *Validation values to be used, modify as needed
00001000                            18  *Add additional validation values as required
00001000                            19  *-------------------------------------------------------
00001000  =00000000                 20  exit        EQU 0      used to exit assembly program
00001000  =00000064                 21  min_feed    EQU 100    min feed requirement
00001000  =00000001                 22  min_horses  EQU 1      min number of horses
00001000  =0000000A                 23  max_horses  EQU 10     max number of horses
00001000  =00000006                 24  min_soldier EQU 6      min soldiers
00001000  =00000001                 25  min_charge  EQU 1      min rate of fuel use based of speed (oats for horses)
00001000  =00000005                 26  max_charge  EQU 5      max rate e.g. Flank       
00001000  =00000005                 27  hit_point   EQU 5      points accumilated on castle (objective) strike
00001000  =00000008                 28  miss_point  EQU 8      points deducted for ordinace miss
00001000                            29  
00001000  =00000000                 30  amount_feed_purchased EQU 0      amount of feed entered by the player
00001000  =00000000                 31  amount_horses_purchased EQU 0    amount of horses entered by the player
00001000  =00000000                 32  amount_soldiers_hired EQU 0      amount of soldiers entered by the player
00001000                            33  
00001000  =00000064                 34  mine_loc    EQU 100    example for a hit
00001000                            35  
00001000                            36  
00001000                            37  *Start of Game
00001000                            38  start:
00001000  11FC 0064 4000            39      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 40      lea     $4000,A3   assign address A3 to that memory location
0000100A                            41  
0000100A                            42  
0000100A  6100 1FFE                 43      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 44      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 45      bsr     game       branch to the game subroutine
00001016                            46  *Game loop
00003000                            47      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            48  
00003000                            49  *-------------------------------------------------------
00003000                            50  *-------------------Game Subroutine---------------------
00003000                            51  *-------------------------------------------------------
00003000                            52  game:
00003000  6100 0034                 53      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      54      rts                return from game: subroutine
00003006                            55            
00003006                            56  end:
00003006  FFFF FFFF                 57      simhalt
0000300A                            58  
0000300A                            59  *-------------------------------------------------------
0000300A                            60  *-------------------Welcome Subroutine------------------
0000300A                            61  *-------------------------------------------------------
0000300A                            62  welcome:
0000300A  6100 0208                 63      bsr     endl            branch to endl subroutine
0000300E  43F9 0000322D             64      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 65      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      66      trap    #15             trap and interpret value in D0
0000301A  6100 01F8                 67      bsr     endl            branch to endl subroutine
0000301E  4E75                      68      rts                     return from welcome: subroutine
00003020                            69  
00003020                            70  *-------------------------------------------------------
00003020                            71  *---------Gameplay Input Values Subroutine--------------
00003020                            72  *-------------------------------------------------------    
00003020                            73  input:
00003020  6100 00FE                 74      bsr     soldiers        branch to soldiers input subroutine
00003024  6100 009A                 75      bsr     horses          branch to ship input subroutine
00003028  6100 006A                 76      bsr     feed            branch to feed input subroutine
0000302C  6100 00BE                 77      bsr     rate            branch to rate (charging speed) input subroutine
00003030  6100 00D4                 78      bsr     distance        branch to mission distance/location input subroutine
00003034                            79      
00003034  4E75                      80      rts
00003036                            81  
00003036                            82  *-------------------------------------------------------
00003036                            83  *----------------Gameloop (main loop)-------------------
00003036                            84  *------------------------------------------------------- 
00003036                            85  gameloop:
00003036  6100 0028                 86      bsr     update          branch to update game subroutine 
0000303A  6100 01AA                 87      bsr     clear_screen    clears the screen         
0000303E  6100 003A                 88      bsr     draw            branch to draw screen subroutine
00003042  6100 01A2                 89      bsr     clear_screen    clears the screen
00003046  6100 0104                 90      bsr     gameplay        branch to gameplay subroutine
0000304A  6100 019A                 91      bsr     clear_screen    clears the screen
0000304E  6100 011A                 92      bsr     hud             branch to display HUD subroutine
00003052  6100 0192                 93      bsr     clear_screen    clears the screen
00003056  6100 019A                 94      bsr     replay          branch to replay game subroutine
0000305A  6100 018A                 95      bsr     clear_screen    clears the screen
0000305E  4E75                      96      rts                     return from gameloop: subroutine
00003060                            97  
00003060                            98  *-------------------------------------------------------
00003060                            99  *---------------Update Mission Progress-----------------
00003060                           100  *  Move to battle location, engage enemy, fire and take
00003060                           101  *  fire, complete mission and return to base
00003060                           102  *------------------------------------------------------- 
00003060                           103  update:
00003060  6100 01B2                104      bsr     endl            print a CR and LF
00003064  6100 0162                105      bsr     decorate        decorate with dots using a loop
00003068  43F9 000034D7            106      lea     update_msg,A1   
0000306E  103C 000E                107      move.b  #14,D0
00003072  4E4F                     108      trap    #15
00003074  6100 0152                109      bsr     decorate
00003078  4E75                     110      rts
0000307A                           111  *-------------------------------------------------------
0000307A                           112  *---------------Draw Mission Updates--------------------
0000307A                           113  * Draw the game progress information, status regarding
0000307A                           114  * mission
0000307A                           115  *------------------------------------------------------- 
0000307A                           116  draw:
0000307A  6100 0198                117      bsr     endl
0000307E  6100 0148                118      bsr     decorate
00003082  43F9 000034E9            119      lea     draw_msg,A1
00003088  103C 000E                120      move.b  #14,D0
0000308C  4E4F                     121      trap    #15
0000308E  6100 0138                122      bsr     decorate
00003092  4E75                     123      rts
00003094                           124  *-------------------------------------------------------
00003094                           125  *-----------------------Horse feed-----------------------
00003094                           126  * Input the feed load for each horse. Feed costs money
00003094                           127  * For an advanced mark you need to manage this resource
00003094                           128  *------------------------------------------------------- 
00003094                           129  feed:
00003094  6100 017E                130      bsr     endl
00003098  6100 012E                131      bsr     decorate
0000309C  43F9 000032BE            132      lea     feed_msg,A1
000030A2                           133      
000030A2  1638 0000                134      move.b  amount_feed_purchased, d3
000030A6                           135      
000030A6  103C 000E                136      move.b  #14,D0
000030AA  4E4F                     137      trap    #15
000030AC                           138      
000030AC  103C 0004                139      move.b #4,D0
000030B0  4E4F                     140      trap    #15
000030B2                           141      
000030B2  1601                     142      move.b d1,d3
000030B4                           143      
000030B4  303C 0003                144      move #3,d0
000030B8  4E4F                     145      trap #15
000030BA                           146      
000030BA  6100 010C                147      bsr     decorate
000030BE  4E75                     148      rts
000030C0                           149  
000030C0                           150  *-------------------------------------------------------
000030C0                           151  *--------------------Horses Inventory---------------------
000030C0                           152  * Number of horses to be allocated to a mission 
000030C0                           153  *------------------------------------------------------- 
000030C0                           154  horses:
000030C0  6100 0152                155      bsr     endl
000030C4  6100 0102                156      bsr     decorate
000030C8  43F9 0000330A            157      lea     horses_msg,A1
000030CE                           158      
000030CE  1638 0000                159      move.b  amount_horses_purchased, d3
000030D2                           160      
000030D2  103C 000E                161      move.b  #14,D0
000030D6  4E4F                     162      trap    #15
000030D8                           163      
000030D8  103C 0004                164      move.b #4,D0
000030DC  4E4F                     165      trap    #15
000030DE                           166      
000030DE  1601                     167      move.b d1,d3
000030E0                           168      
000030E0  303C 0003                169      move #3,d0
000030E4  4E4F                     170      trap #15
000030E6                           171  
000030E6                           172      
000030E6  6100 00E0                173         bsr     decorate
000030EA  4E75                     174      rts
000030EC                           175  
000030EC                           176  *-------------------------------------------------------
000030EC                           177  *-------------------Horse(s) Charge Speed---------------
000030EC                           178  * horses speed to and from a mission
000030EC                           179  *------------------------------------------------------- 
000030EC                           180  rate:
000030EC  6100 0126                181      bsr     endl
000030F0  6100 00D6                182      bsr     decorate
000030F4  43F9 0000331E            183      lea     rate_msg,A1
000030FA  103C 000E                184      move.b  #14,D0
000030FE  4E4F                     185      trap    #15
00003100  6100 00C6                186      bsr     decorate
00003104  4E75                     187      rts
00003106                           188  
00003106                           189  *-------------------------------------------------------
00003106                           190  *------------------Mission Distance---------------------
00003106                           191  * Distance to battle location
00003106                           192  *------------------------------------------------------- 
00003106                           193  distance:
00003106  6100 010C                194      bsr     endl
0000310A  6100 00BC                195      bsr     decorate
0000310E  43F9 00003396            196      lea     distance_msg,A1
00003114  103C 000E                197      move.b  #14,D0
00003118  4E4F                     198      trap    #15
0000311A  6100 00AC                199      bsr     decorate
0000311E  4E75                     200      rts
00003120                           201  
00003120                           202  *-------------------------------------------------------
00003120                           203  *-----------------------Soldiers----------------------
00003120                           204  * Number of soldiers
00003120                           205  *-------------------------------------------------------   
00003120                           206  soldiers:
00003120  6100 00F2                207      bsr     endl
00003124  6100 00A2                208      bsr     decorate
00003128  43F9 0000343C            209      lea     soldiers_msg,A1
0000312E                           210      
0000312E  1638 0000                211      move.b  amount_soldiers_hired, d3
00003132                           212      
00003132  103C 000E                213      move.b  #14,D0
00003136  4E4F                     214      trap    #15
00003138                           215      
00003138  103C 0004                216      move.b #4,D0
0000313C  4E4F                     217      trap    #15
0000313E                           218      
0000313E  1601                     219      move.b d1,d3
00003140                           220      
00003140  303C 0003                221      move #3,d0
00003144  4E4F                     222      trap #15
00003146                           223  
00003146  6100 0080                224      bsr     decorate
0000314A  4E75                     225      rts
0000314C                           226  
0000314C                           227  *-------------------------------------------------------
0000314C                           228  *---Game Play (Mission Progress, Battle Maneuvers)------
0000314C                           229  *------------------------------------------------------- 
0000314C                           230  gameplay:
0000314C  6100 00C6                231      bsr     endl
00003150  6100 0076                232      bsr     decorate
00003154  43F9 000034C8            233      lea     gameplay_msg,A1
0000315A  103C 000E                234      move.b  #14,D0
0000315E  4E4F                     235      trap    #15
00003160  6100 0066                236      bsr     decorate
00003164  6100 0026                237      bsr     collision
00003168  4E75                     238      rts
0000316A                           239  
0000316A                           240  *-------------------------------------------------------
0000316A                           241  *-----------------Heads Up Display (Score)--------------
0000316A                           242  * Retrieves the score from memory location
0000316A                           243  *-------------------------------------------------------   
0000316A                           244  hud:
0000316A                           245  
0000316A  6100 00A8                246      bsr     endl
0000316E  6100 0058                247      bsr     decorate
00003172  43F9 00003535            248      lea     hud_msg,A1
00003178  103C 000E                249      move.b  #14,D0
0000317C  4E4F                     250      trap    #15
0000317E  1213                     251      move.b  (A3),D1     retrieve the value A3 point to and move to D1
00003180  103C 0003                252      move.b  #3,D0       move literal 3 to D0
00003184  4E4F                     253      trap    #15         intrepret value in D0, which 3 which displays D1
00003186  6100 0040                254      bsr     decorate
0000318A  4E75                     255      rts
0000318C                           256  
0000318C                           257  *-------------------------------------------------------
0000318C                           258  *-----------------------Taking Fire---------------------
0000318C                           259  * This could be used for collision detection, if 
0000318C                           260  *-------------------------------------------------------
0000318C                           261  collision:
0000318C  123C 0064                262      move.b  #mine_loc,D1
00003190  B27C 0064                263      cmp     #100,D1 is( x == 100)?
00003194  6600 0010                264      bne     collision_miss if x is equal to 100, then hit
00003198                           265  collision_hit:
00003198                           266      *hit
00003198  43F9 000034F7            267      lea     hit_msg,A1
0000319E  303C 000E                268      move    #14,D0
000031A2  4E4F                     269      trap    #15
000031A4  4E75                     270      rts
000031A6                           271      
000031A6                           272  collision_miss:
000031A6                           273      *miss
000031A6  43F9 000034FF            274      lea     miss_msg,A1
000031AC  303C 000E                275      move    #14,D0
000031B0  4E4F                     276      trap    #15
000031B2  4E75                     277      rts
000031B4                           278  
000031B4                           279  *-------------------------------------------------------
000031B4                           280  *--------------------------Loop-------------------------
000031B4                           281  *-------------------------------------------------------
000031B4                           282  loop:
000031B4  163C 0005                283      move.b  #5, D3 loop counter D3=5
000031B8                           284  next:
000031B8  43F9 00003505            285      lea     loop_msg,A1
000031BE  103C 000E                286      move.b  #14,D0
000031C2  4E4F                     287      trap    #15
000031C4  5343                     288      sub     #1,D3   decrement loop counter
000031C6  66F0                     289      bne     next    repeat until D0=0
000031C8                           290  
000031C8                           291  *-------------------------------------------------------
000031C8                           292  *------------------Screen Decoration--------------------
000031C8                           293  *-------------------------------------------------------
000031C8                           294  decorate:
000031C8  163C 003C                295      move.b  #60, D3
000031CC  6100 0046                296      bsr     endl
000031D0                           297  out:
000031D0  43F9 00003505            298      lea     loop_msg,A1
000031D6  103C 000E                299      move.b  #14,D0
000031DA  4E4F                     300      trap    #15
000031DC  5343                     301      sub     #1,D3   decrement loop counter
000031DE  66F0                     302      bne     out     repeat until D0=0
000031E0  6100 0032                303      bsr     endl
000031E4  4E75                     304      rts
000031E6                           305      
000031E6                           306  clear_screen: 
000031E6  103C 000B                307      move.b  #11,D0      clear screen
000031EA  323C FF00                308      move.w  #$ff00,D1
000031EE  4E4F                     309      trap    #15
000031F0  4E75                     310      rts
000031F2                           311  *-------------------------------------------------------
000031F2                           312  *------------------------Replay-------------------------
000031F2                           313  *-------------------------------------------------------
000031F2                           314  replay:
000031F2  6100 0020                315      bsr     endl
000031F6  43F9 00003507            316      lea     replay_msg,A1
000031FC  103C 000E                317      move.b  #14,D0
00003200  4E4F                     318      trap    #15
00003202                           319      
00003202  103C 0004                320      move.b  #4,D0
00003206  4E4F                     321      trap    #15
00003208                           322  
00003208  B27C 0000                323      cmp     #exit,D1
0000320C  6700 FDF8                324      beq     end         if SR Z register contains 1 beq => Branch Equals
00003210  6100 FE24                325      bsr     gameloop
00003214                           326  
00003214                           327  endl:
00003214  48E7 8040                328      movem.l D0/A1,-(A7)
00003218  303C 000E                329      move    #14,D0
0000321C  43F9 0000322A            330      lea     crlf,A1
00003222  4E4F                     331      trap    #15
00003224  4CDF 0201                332      movem.l (A7)+,D0/A1
00003228  4E75                     333      rts
0000322A                           334      
0000322A                           335  *-------------------------------------------------------
0000322A                           336  *-------------------Data Delarations--------------------
0000322A                           337  *-------------------------------------------------------
0000322A                           338  
0000322A= 0D 0A 00                 339  crlf:           dc.b    $0D,$0A,0
0000322D= 2A 2A 2A 2A 2A 2A ...    340  welcome_msg:    dc.b    '************************************************************'
00003269= 0D 0A                    341                  dc.b    $0D,$0A
0000326B= 43 61 73 74 6C 65 ...    342                  dc.b    'Castle botherers 7'
0000327D= 0D 0A                    343                  dc.b    $0D,$0A
0000327F= 2A 2A 2A 2A 2A 2A ...    344                  dc.b    '************************************************************'
000032BB= 0D 0A 00                 345                  dc.b    $0D,$0A,0
000032BE= 46 65 65 64 20 6C ...    346  feed_msg:       dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032F5= 0D 0A                    347                  dc.b    $0D,$0A
000032F7= 45 6E 74 65 72 20 ...    348                  dc.b    'Enter feed load : ',0
0000330A= 4E 75 6D 62 65 72 ...    349  horses_msg:      dc.b    'Number of horses : ',0
0000331E= 4F 6E 65 20 54 68 ...    350  rate_msg:       dc.b    'One Third[1], Two Thirds[2], Standard Charge[3], ' 
0000334F= 0D 0A                    351                  dc.b    $0D,$0A
00003351= 46 75 6C 6C 20 43 ...    352                  dc.b    'Full Charge[4], Flank Charge[5] units feed per click'
00003385= 0D 0A                    353                  dc.b    $0D,$0A
00003387= 45 6E 74 65 72 20 ...    354                  dc.b    'Enter Speed : ',0
00003396= 4D 69 73 73 69 6F ...    355  distance_msg:   dc.b    'Mission distance e.g. 40 (with 100 units of feed  '
000033C8= 0D 0A                    356                  dc.b    $0D,$0A
000033CA= 4F 6E 65 20 54 68 ...    357                  dc.b    'One Third speed 20 units remain for manuvouirs) horses '
00003401= 0D 0A                    358                  dc.b    $0D,$0A
00003403= 48 6F 72 73 65 73 ...    359                  dc.b    'Horses without feed are lost.'
00003420= 0D 0A                    360                  dc.b    $0D,$0A
00003422= 45 6E 74 65 72 20 ...    361                  dc.b    'Enter mission distance : ',0
0000343C= 45 61 63 68 20 68 ...    362  soldiers_msg:       dc.b    'Each horse needs at least 1 Knight and 1 Stable Hand'
00003470= 0D 0A                    363                  dc.b    $0D,$0A
00003472= 6D 69 6E 69 6D 75 ...    364                  dc.b    'minimum requirement is 2 i.e. Stable Hand x 1 and Knight x 1.'
000034AF= 0D 0A                    365                  dc.b    $0D,$0A
000034B1= 45 6E 74 65 72 20 ...    366                  dc.b    'Enter # of soldiers : ',0
000034C8= 41 64 64 20 47 61 ...    367  gameplay_msg:   dc.b    'Add Gameplay !',0
000034D7= 55 70 64 61 74 65 ...    368  update_msg:     dc.b    'Update Gameplay !',0
000034E9= 44 72 61 77 20 53 ...    369  draw_msg:       dc.b    'Draw Screen !',0
000034F7= 53 74 72 69 6B 65 ...    370  hit_msg:        dc.b    'Strike!',0
000034FF= 4D 69 73 73 21 00        371  miss_msg:       dc.b    'Miss!',0
00003505= 2E 00                    372  loop_msg:       dc.b    '.',0
00003507= 45 6E 74 65 72 20 ...    373  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003535= 53 63 6F 72 65 20 ...    374  hud_msg:        dc.b    'Score : ',0
0000353E                           375  
0000353E                           376  health:     ds.w    1
00003540                           377  score:      ds.w    1 reserve space for score
00003542                           378  
00003542                           379      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AMOUNT_FEED_PURCHASED  0
AMOUNT_HORSES_PURCHASED  0
AMOUNT_SOLDIERS_HIRED  0
CLEAR_SCREEN        31E6
COLLISION           318C
COLLISION_HIT       3198
COLLISION_MISS      31A6
CRLF                322A
DECORATE            31C8
DISTANCE            3106
DISTANCE_MSG        3396
DRAW                307A
DRAW_MSG            34E9
END                 3006
ENDL                3214
EXIT                0
FEED                3094
FEED_MSG            32BE
GAME                3000
GAMELOOP            3036
GAMEPLAY            314C
GAMEPLAY_MSG        34C8
HEALTH              353E
HIT_MSG             34F7
HIT_POINT           5
HORSES              30C0
HORSES_MSG          330A
HUD                 316A
HUD_MSG             3535
INPUT               3020
LOOP                31B4
LOOP_MSG            3505
MAX_CHARGE          5
MAX_HORSES          A
MINE_LOC            64
MIN_CHARGE          1
MIN_FEED            64
MIN_HORSES          1
MIN_SOLDIER         6
MISS_MSG            34FF
MISS_POINT          8
NEXT                31B8
OUT                 31D0
RATE                30EC
RATE_MSG            331E
REPLAY              31F2
REPLAY_MSG          3507
SCORE               3540
SOLDIERS            3120
SOLDIERS_MSG        343C
START               1000
UPDATE              3060
UPDATE_MSG          34D7
WELCOME             300A
WELCOME_MSG         322D
