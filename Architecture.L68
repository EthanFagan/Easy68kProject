00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/04/2018 12:41:22

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be Evil Crimson Wizard or the knights of Dio
00001000                            14  *-------------------------------------------------------
00001000                            15  
00001000                            16  *-------------------------------------------------------
00001000                            17  *Validation values to be used, modify as needed
00001000                            18  *Add additional validation values as required
00001000                            19  *-------------------------------------------------------
00001000  =00000000                 20  exit        EQU 0      used to exit assembly program
00001000  =00000064                 21  min_feed    EQU 100    min feed requirement
00001000  =00000001                 22  min_horses  EQU 1      min number of horses
00001000  =00000009                 23  max_horses  EQU 9      max number of horses
00001000  =00000006                 24  min_soldier EQU 6      min soldiers
00001000  =00000001                 25  min_charge  EQU 1      min rate of fuel use based of speed (oats for horses)
00001000  =00000005                 26  max_charge  EQU 5      max rate e.g. Flank       
00001000  =00000005                 27  hit_point   EQU 5      points accumilated on castle (objective) strike
00001000  =00000008                 28  miss_point  EQU 8      points deducted for ordinace miss
00001000                            29  
00001000  =00000000                 30  amount_feed EQU 0      players current amount of feed
00001000                            31  
00001000  =00000064                 32  mine_loc    EQU 100    example for a hit
00001000                            33  
00001000                            34  
00001000                            35  *Start of Game
00001000                            36  start:
00001000  11FC 0064 4000            37      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 38      lea     $4000,A3   assign address A3 to that memory location
0000100A                            39  
0000100A                            40  
0000100A  6100 1FFE                 41      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 42      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 43      bsr     game       branch to the game subroutine
00001016                            44  *Game loop
00003000                            45      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            46  
00003000                            47  *-------------------------------------------------------
00003000                            48  *-------------------Game Subroutine---------------------
00003000                            49  *-------------------------------------------------------
00003000                            50  game:
00003000  6100 0034                 51      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      52      rts                return from game: subroutine
00003006                            53            
00003006                            54  end:
00003006  FFFF FFFF                 55      simhalt
0000300A                            56  
0000300A                            57  *-------------------------------------------------------
0000300A                            58  *-------------------Welcome Subroutine------------------
0000300A                            59  *-------------------------------------------------------
0000300A                            60  welcome:
0000300A  6100 01EC                 61      bsr     endl            branch to endl subroutine
0000300E  43F9 00003211             62      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 63      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      64      trap    #15             trap and interpret value in D0
0000301A  6100 01DC                 65      bsr     endl            branch to endl subroutine
0000301E  4E75                      66      rts                     return from welcome: subroutine
00003020                            67  
00003020                            68  *-------------------------------------------------------
00003020                            69  *---------Gameplay Input Values Subroutine--------------
00003020                            70  *-------------------------------------------------------    
00003020                            71  input:
00003020  6100 0072                 72      bsr     feed            branch to feed input subroutine
00003024  6100 009C                 73      bsr     horses          branch to ship input subroutine
00003028  6100 00B8                 74      bsr     rate            branch to rate (charging speed) input subroutine
0000302C  6100 00CE                 75      bsr     distance        branch to mission distance/location input subroutine
00003030  6100 00E4                 76      bsr     soldiers        branch to soldiers input subroutine
00003034  4E75                      77      rts
00003036                            78  
00003036                            79  *-------------------------------------------------------
00003036                            80  *----------------Gameloop (main loop)-------------------
00003036                            81  *------------------------------------------------------- 
00003036                            82  gameloop:
00003036  6100 0028                 83      bsr     update          branch to update game subroutine 
0000303A  6100 018E                 84      bsr     clear_screen    clears the screen         
0000303E  6100 003A                 85      bsr     draw            branch to draw screen subroutine
00003042  6100 0186                 86      bsr     clear_screen    clears the screen
00003046  6100 00E8                 87      bsr     gameplay        branch to gameplay subroutine
0000304A  6100 017E                 88      bsr     clear_screen    clears the screen
0000304E  6100 00FE                 89      bsr     hud             branch to display HUD subroutine
00003052  6100 0176                 90      bsr     clear_screen    clears the screen
00003056  6100 017E                 91      bsr     replay          branch to replay game subroutine
0000305A  6100 016E                 92      bsr     clear_screen    clears the screen
0000305E  4E75                      93      rts                     return from gameloop: subroutine
00003060                            94  
00003060                            95  *-------------------------------------------------------
00003060                            96  *---------------Update Mission Progress-----------------
00003060                            97  *  Move to battle location, engage enemy, fire and take
00003060                            98  *  fire, complete mission and return to base
00003060                            99  *------------------------------------------------------- 
00003060                           100  update:
00003060  6100 0196                101      bsr     endl            print a CR and LF
00003064  6100 0146                102      bsr     decorate        decorate with dots using a loop
00003068  43F9 000034BB            103      lea     update_msg,A1   
0000306E  103C 000E                104      move.b  #14,D0
00003072  4E4F                     105      trap    #15
00003074  6100 0136                106      bsr     decorate
00003078  4E75                     107      rts
0000307A                           108  *-------------------------------------------------------
0000307A                           109  *---------------Draw Mission Updates--------------------
0000307A                           110  * Draw the game progress information, status regarding
0000307A                           111  * mission
0000307A                           112  *------------------------------------------------------- 
0000307A                           113  draw:
0000307A  6100 017C                114      bsr     endl
0000307E  6100 012C                115      bsr     decorate
00003082  43F9 000034CD            116      lea     draw_msg,A1
00003088  103C 000E                117      move.b  #14,D0
0000308C  4E4F                     118      trap    #15
0000308E  6100 011C                119      bsr     decorate
00003092  4E75                     120      rts
00003094                           121  *-------------------------------------------------------
00003094                           122  *-----------------------Horse feed-----------------------
00003094                           123  * Input the feed load for each horse. Feed costs money
00003094                           124  * For an advanced mark you need to manage this resource
00003094                           125  *------------------------------------------------------- 
00003094                           126  feed:
00003094  6100 0162                127      bsr     endl
00003098  6100 0112                128      bsr     decorate
0000309C  43F9 000032A2            129      lea     feed_msg,A1
000030A2                           130      
000030A2  1638 0000                131      move.b  amount_feed, d3
000030A6                           132      
000030A6  103C 000E                133      move.b  #14,D0
000030AA  4E4F                     134      trap    #15
000030AC                           135      
000030AC  103C 0004                136      move.b #4,D0
000030B0  4E4F                     137      trap    #15
000030B2                           138      
000030B2  1601                     139      move.b d1,d3
000030B4                           140      
000030B4  1203                     141      move.b d3,d1
000030B6                           142      
000030B6  303C 0003                143      move #3,d0
000030BA  4E4F                     144      trap #15
000030BC                           145      
000030BC  6100 00EE                146      bsr     decorate
000030C0  4E75                     147      rts
000030C2                           148  
000030C2                           149  *-------------------------------------------------------
000030C2                           150  *--------------------Horses Inventory---------------------
000030C2                           151  * Number of horses to be allocated to a mission 
000030C2                           152  *------------------------------------------------------- 
000030C2                           153  horses:
000030C2  6100 0134                154      bsr     endl
000030C6  6100 00E4                155      bsr     decorate
000030CA  43F9 000032EE            156      lea     horses_msg,A1
000030D0  103C 000E                157      move.b  #14,D0
000030D4  4E4F                     158      trap    #15
000030D6                           159      
000030D6  103C 0009                160      move.b #9,d0
000030DA  4E4F                     161      trap #15
000030DC  6100 00CE                162      bsr     decorate
000030E0  4E75                     163      rts
000030E2                           164  
000030E2                           165  *-------------------------------------------------------
000030E2                           166  *-------------------Horse(s) Charge Speed---------------
000030E2                           167  * horses speed to and from a mission
000030E2                           168  *------------------------------------------------------- 
000030E2                           169  rate:
000030E2  6100 0114                170      bsr     endl
000030E6  6100 00C4                171      bsr     decorate
000030EA  43F9 00003302            172      lea     rate_msg,A1
000030F0  103C 000E                173      move.b  #14,D0
000030F4  4E4F                     174      trap    #15
000030F6  6100 00B4                175      bsr     decorate
000030FA  4E75                     176      rts
000030FC                           177  
000030FC                           178  *-------------------------------------------------------
000030FC                           179  *------------------Mission Distance---------------------
000030FC                           180  * Distance to battle location
000030FC                           181  *------------------------------------------------------- 
000030FC                           182  distance:
000030FC  6100 00FA                183      bsr     endl
00003100  6100 00AA                184      bsr     decorate
00003104  43F9 0000337A            185      lea     distance_msg,A1
0000310A  103C 000E                186      move.b  #14,D0
0000310E  4E4F                     187      trap    #15
00003110  6100 009A                188      bsr     decorate
00003114  4E75                     189      rts
00003116                           190  
00003116                           191  *-------------------------------------------------------
00003116                           192  *-----------------------Soldiers----------------------
00003116                           193  * Number of soldiers
00003116                           194  *-------------------------------------------------------   
00003116                           195  soldiers:
00003116  6100 00E0                196      bsr     endl
0000311A  6100 0090                197      bsr     decorate
0000311E  43F9 00003420            198      lea     soldiers_msg,A1
00003124  103C 000E                199      move.b  #14,D0
00003128  4E4F                     200      trap    #15
0000312A  6100 0080                201      bsr     decorate
0000312E  4E75                     202      rts
00003130                           203  
00003130                           204  *-------------------------------------------------------
00003130                           205  *---Game Play (Mission Progress, Battle Maneuvers)------
00003130                           206  *------------------------------------------------------- 
00003130                           207  gameplay:
00003130  6100 00C6                208      bsr     endl
00003134  6100 0076                209      bsr     decorate
00003138  43F9 000034AC            210      lea     gameplay_msg,A1
0000313E  103C 000E                211      move.b  #14,D0
00003142  4E4F                     212      trap    #15
00003144  6100 0066                213      bsr     decorate
00003148  6100 0026                214      bsr     collision
0000314C  4E75                     215      rts
0000314E                           216  
0000314E                           217  *-------------------------------------------------------
0000314E                           218  *-----------------Heads Up Display (Score)--------------
0000314E                           219  * Retrieves the score from memory location
0000314E                           220  *-------------------------------------------------------   
0000314E                           221  hud:
0000314E                           222  
0000314E  6100 00A8                223      bsr     endl
00003152  6100 0058                224      bsr     decorate
00003156  43F9 00003519            225      lea     hud_msg,A1
0000315C  103C 000E                226      move.b  #14,D0
00003160  4E4F                     227      trap    #15
00003162  1213                     228      move.b  (A3),D1     retrieve the value A3 point to and move to D1
00003164  103C 0003                229      move.b  #3,D0       move literal 3 to D0
00003168  4E4F                     230      trap    #15         intrepret value in D0, which 3 which displays D1
0000316A  6100 0040                231      bsr     decorate
0000316E  4E75                     232      rts
00003170                           233  
00003170                           234  *-------------------------------------------------------
00003170                           235  *-----------------------Taking Fire---------------------
00003170                           236  * This could be used for collision detection, if 
00003170                           237  *-------------------------------------------------------
00003170                           238  collision:
00003170  123C 0064                239      move.b  #mine_loc,D1
00003174  B27C 0064                240      cmp     #100,D1 is( x == 100)?
00003178  6600 0010                241      bne     collision_miss if x is equal to 100, then hit
0000317C                           242  collision_hit:
0000317C                           243      *hit
0000317C  43F9 000034DB            244      lea     hit_msg,A1
00003182  303C 000E                245      move    #14,D0
00003186  4E4F                     246      trap    #15
00003188  4E75                     247      rts
0000318A                           248      
0000318A                           249  collision_miss:
0000318A                           250      *miss
0000318A  43F9 000034E3            251      lea     miss_msg,A1
00003190  303C 000E                252      move    #14,D0
00003194  4E4F                     253      trap    #15
00003196  4E75                     254      rts
00003198                           255  
00003198                           256  *-------------------------------------------------------
00003198                           257  *--------------------------Loop-------------------------
00003198                           258  *-------------------------------------------------------
00003198                           259  loop:
00003198  163C 0005                260      move.b  #5, D3 loop counter D3=5
0000319C                           261  next:
0000319C  43F9 000034E9            262      lea     loop_msg,A1
000031A2  103C 000E                263      move.b  #14,D0
000031A6  4E4F                     264      trap    #15
000031A8  5343                     265      sub     #1,D3   decrement loop counter
000031AA  66F0                     266      bne     next    repeat until D0=0
000031AC                           267  
000031AC                           268  *-------------------------------------------------------
000031AC                           269  *------------------Screen Decoration--------------------
000031AC                           270  *-------------------------------------------------------
000031AC                           271  decorate:
000031AC  163C 003C                272      move.b  #60, D3
000031B0  6100 0046                273      bsr     endl
000031B4                           274  out:
000031B4  43F9 000034E9            275      lea     loop_msg,A1
000031BA  103C 000E                276      move.b  #14,D0
000031BE  4E4F                     277      trap    #15
000031C0  5343                     278      sub     #1,D3   decrement loop counter
000031C2  66F0                     279      bne     out     repeat until D0=0
000031C4  6100 0032                280      bsr     endl
000031C8  4E75                     281      rts
000031CA                           282      
000031CA                           283  clear_screen: 
000031CA  103C 000B                284      move.b  #11,D0      clear screen
000031CE  323C FF00                285      move.w  #$ff00,D1
000031D2  4E4F                     286      trap    #15
000031D4  4E75                     287      rts
000031D6                           288  *-------------------------------------------------------
000031D6                           289  *------------------------Replay-------------------------
000031D6                           290  *-------------------------------------------------------
000031D6                           291  replay:
000031D6  6100 0020                292      bsr     endl
000031DA  43F9 000034EB            293      lea     replay_msg,A1
000031E0  103C 000E                294      move.b  #14,D0
000031E4  4E4F                     295      trap    #15
000031E6                           296      
000031E6  103C 0004                297      move.b  #4,D0
000031EA  4E4F                     298      trap    #15
000031EC                           299  
000031EC  B27C 0000                300      cmp     #exit,D1
000031F0  6700 FE14                301      beq     end         if SR Z register contains 1 beq => Branch Equals
000031F4  6100 FE40                302      bsr     gameloop
000031F8                           303  
000031F8                           304  endl:
000031F8  48E7 8040                305      movem.l D0/A1,-(A7)
000031FC  303C 000E                306      move    #14,D0
00003200  43F9 0000320E            307      lea     crlf,A1
00003206  4E4F                     308      trap    #15
00003208  4CDF 0201                309      movem.l (A7)+,D0/A1
0000320C  4E75                     310      rts
0000320E                           311      
0000320E                           312  *-------------------------------------------------------
0000320E                           313  *-------------------Data Delarations--------------------
0000320E                           314  *-------------------------------------------------------
0000320E                           315  
0000320E= 0D 0A 00                 316  crlf:           dc.b    $0D,$0A,0
00003211= 2A 2A 2A 2A 2A 2A ...    317  welcome_msg:    dc.b    '************************************************************'
0000324D= 0D 0A                    318                  dc.b    $0D,$0A
0000324F= 43 61 73 74 6C 65 ...    319                  dc.b    'Castle botherers 7'
00003261= 0D 0A                    320                  dc.b    $0D,$0A
00003263= 2A 2A 2A 2A 2A 2A ...    321                  dc.b    '************************************************************'
0000329F= 0D 0A 00                 322                  dc.b    $0D,$0A,0
000032A2= 46 65 65 64 20 6C ...    323  feed_msg:       dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032D9= 0D 0A                    324                  dc.b    $0D,$0A
000032DB= 45 6E 74 65 72 20 ...    325                  dc.b    'Enter feed load : ',0
000032EE= 4E 75 6D 62 65 72 ...    326  horses_msg:      dc.b    'Number of horses : ',0
00003302= 4F 6E 65 20 54 68 ...    327  rate_msg:       dc.b    'One Third[1], Two Thirds[2], Standard Charge[3], ' 
00003333= 0D 0A                    328                  dc.b    $0D,$0A
00003335= 46 75 6C 6C 20 43 ...    329                  dc.b    'Full Charge[4], Flank Charge[5] units feed per click'
00003369= 0D 0A                    330                  dc.b    $0D,$0A
0000336B= 45 6E 74 65 72 20 ...    331                  dc.b    'Enter Speed : ',0
0000337A= 4D 69 73 73 69 6F ...    332  distance_msg:   dc.b    'Mission distance e.g. 40 (with 100 units of feed  '
000033AC= 0D 0A                    333                  dc.b    $0D,$0A
000033AE= 4F 6E 65 20 54 68 ...    334                  dc.b    'One Third speed 20 units remain for manuvouirs) horses '
000033E5= 0D 0A                    335                  dc.b    $0D,$0A
000033E7= 48 6F 72 73 65 73 ...    336                  dc.b    'Horses without feed are lost.'
00003404= 0D 0A                    337                  dc.b    $0D,$0A
00003406= 45 6E 74 65 72 20 ...    338                  dc.b    'Enter mission distance : ',0
00003420= 45 61 63 68 20 68 ...    339  soldiers_msg:       dc.b    'Each horse needs at least 1 Knight and 1 Stable Hand'
00003454= 0D 0A                    340                  dc.b    $0D,$0A
00003456= 6D 69 6E 69 6D 75 ...    341                  dc.b    'minimum requirement is 2 i.e. Stable Hand x 1 and Knight x 1.'
00003493= 0D 0A                    342                  dc.b    $0D,$0A
00003495= 45 6E 74 65 72 20 ...    343                  dc.b    'Enter # of soldiers : ',0
000034AC= 41 64 64 20 47 61 ...    344  gameplay_msg:   dc.b    'Add Gameplay !',0
000034BB= 55 70 64 61 74 65 ...    345  update_msg:     dc.b    'Update Gameplay !',0
000034CD= 44 72 61 77 20 53 ...    346  draw_msg:       dc.b    'Draw Screen !',0
000034DB= 53 74 72 69 6B 65 ...    347  hit_msg:        dc.b    'Strike!',0
000034E3= 4D 69 73 73 21 00        348  miss_msg:       dc.b    'Miss!',0
000034E9= 2E 00                    349  loop_msg:       dc.b    '.',0
000034EB= 45 6E 74 65 72 20 ...    350  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003519= 53 63 6F 72 65 20 ...    351  hud_msg:        dc.b    'Score : ',0
00003522                           352  
00003522                           353  health:     ds.w    1
00003524                           354  score:      ds.w    1 reserve space for score
00003526                           355  
00003526                           356      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AMOUNT_FEED         0
CLEAR_SCREEN        31CA
COLLISION           3170
COLLISION_HIT       317C
COLLISION_MISS      318A
CRLF                320E
DECORATE            31AC
DISTANCE            30FC
DISTANCE_MSG        337A
DRAW                307A
DRAW_MSG            34CD
END                 3006
ENDL                31F8
EXIT                0
FEED                3094
FEED_MSG            32A2
GAME                3000
GAMELOOP            3036
GAMEPLAY            3130
GAMEPLAY_MSG        34AC
HEALTH              3522
HIT_MSG             34DB
HIT_POINT           5
HORSES              30C2
HORSES_MSG          32EE
HUD                 314E
HUD_MSG             3519
INPUT               3020
LOOP                3198
LOOP_MSG            34E9
MAX_CHARGE          5
MAX_HORSES          9
MINE_LOC            64
MIN_CHARGE          1
MIN_FEED            64
MIN_HORSES          1
MIN_SOLDIER         6
MISS_MSG            34E3
MISS_POINT          8
NEXT                319C
OUT                 31B4
RATE                30E2
RATE_MSG            3302
REPLAY              31D6
REPLAY_MSG          34EB
SCORE               3524
SOLDIERS            3116
SOLDIERS_MSG        3420
START               1000
UPDATE              3060
UPDATE_MSG          34BB
WELCOME             300A
WELCOME_MSG         3211
